[metadata]
name = servicemon
author = Tom Donaldson
author_email =
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://servicemon.readthedocs.io/en/latest/
description = Monitor VO service performance
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = NASA-NAVO/servicemon

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires =
    astroquery
    requests
    pyvo
    codetiming
    ec2_metadata

[options.entry_points]
console_scripts =
    sm_query = servicemon.query_runner:sm_query
    sm_replay = servicemon.query_runner:sm_replay
    sm_conegen = servicemon.cone:sm_conegen

[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy
    sphinxcontrib-programoutput

[options.package_data]
servicemon = data/*

[tool:pytest]
testpaths = "servicemon" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

# Prevents the plugin *.py files in servicemon/tests/data from being auto-loaded by pytest.
# norecursedirs = servicemon/tests/data

[coverage:run]
omit =
    servicemon/_astropy_init*
    servicemon/conftest.py
    servicemon/*setup_package*
    servicemon/tests/*
    servicemon/*/tests/*
    servicemon/extern/*
    servicemon/version*
    */servicemon/_astropy_init*
    */servicemon/conftest.py
    */servicemon/*setup_package*
    */servicemon/tests/*
    */servicemon/*/tests/*
    */servicemon/extern/*
    */servicemon/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
